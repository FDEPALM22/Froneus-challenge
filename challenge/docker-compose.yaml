version: '3.8'
services:
  zookeeper:
    image: bitnami/zookeeper:3.9.1
    container_name: zookeeper
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka1:
    image: bitnami/kafka:3.7.0
    container_name: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - kafka_data1:/bitnami/kafka
    networks:
      - kafka-network

  producer:
    image: openjdk:17-jdk-slim
    container_name: producer
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
      - SPRING_APPLICATION_NAME=challenge
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka1:29092
      - SPRING_KAFKA_TOPIC_NAME=user-status-topic
    ports:
      - "8080:8080"
    volumes:
      - ./target:/app
    command: [ "java", "-jar", "/app/challenge-0.0.1-SNAPSHOT.jar" ]
    depends_on:
      - kafka1
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8085:8080"
    depends_on:
      - kafka1
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka_data1:
    driver: local
